/***************************************************************
* file: EndScreen.java
* author: Hagop Bowazoglanian
*         John Vincent Canalita
*         Eugene Lee
*         Seungyun Lee
*         Dylan Nguyen
* 
* Class: CS 245 â€“ Programming Graphical User Interfaces
*
* assignment: program 1.1
* date last modified: 1/25/2017
*
* purpose: Creates the End screen page for the Hangman game,
*          showing the final score of the player when the game
*          ends
*
****************************************************************/
package gui;

import highscore.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import other.Info;

public class EndScreen extends javax.swing.JFrame {
    
    // final total score
    private int finalScore;
   
    // method: EndScreen
    // purpose: Constructor of the EndScreen class
    public EndScreen(int finalScore) {
        // Shows Info Frame when F1 is pressed
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            KeyStroke.getKeyStroke(KeyEvent.VK_F1,0), "Info");
        getRootPane().getActionMap().put("Info", new AbstractAction(){ //$NON-NLS-1$
            @Override
            public void actionPerformed(ActionEvent e)
            {
                Info info = new Info();
            }
        });
        
        // Exits program when ESC key is pressed
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
            KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0), "Exit");
        getRootPane().getActionMap().put("Exit", new AbstractAction(){ //$NON-NLS-1$
            @Override
            public void actionPerformed(ActionEvent e)
            {
                System.exit(0);
            }
        });
        this.finalScore = finalScore;
        initComponents();
        
        // Tooltip instantiation
        buttonEnd.setToolTipText("Click to end session and return to the Main Menu");
        saveButton.setToolTipText("Click to save the name typed above as a high score");
        
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scoreLabel = new javax.swing.JLabel();
        scoreValue = new javax.swing.JLabel();
        buttonEnd = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        scoreLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        scoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreLabel.setText("Score");
        getContentPane().add(scoreLabel);
        scoreLabel.setBounds(260, 60, 80, 50);

        scoreValue.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        scoreValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreValue.setText("Actual Score");
        getContentPane().add(scoreValue);
        scoreValue.setBounds(190, 150, 220, 50);

        buttonEnd.setText("End");
        buttonEnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEndMouseClicked(evt);
            }
        });
        getContentPane().add(buttonEnd);
        buttonEnd.setBounds(20, 350, 80, 30);

        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameField.setText("NAME");
        getContentPane().add(nameField);
        nameField.setBounds(260, 190, 80, 30);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(260, 220, 80, 30);

        setSize(new java.awt.Dimension(616, 439));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // method: buttonEndMouseClicked
    // purpose: disables current screen and enables the Menu screen
    private void buttonEndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEndMouseClicked
        this.setVisible(false); 
        new MenuGUI().setVisible(true); 
    }//GEN-LAST:event_buttonEndMouseClicked
    // method: saveButtonActionPerformed
    // purpose: saves user's name
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        ScoreManager sm = new ScoreManager();
        sm.addScore(getName(), finalScore);
        saveButton.setEnabled(false);
    }//GEN-LAST:event_saveButtonActionPerformed

    // method: setScore
    // purpose: sets the player's final score and displays it
    public void setScore(int finalScore) {
        String displayScore = Integer.toString(finalScore);
        scoreValue.setText(displayScore);
    }
    
    // method: getName
    // purpose: returns name of user
    public String getName() {
        String name = nameField.getText();
        return name;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEnd;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel scoreValue;
    // End of variables declaration//GEN-END:variables
}
